// **********************************************************************
//
// Copyright (c) 2003-2013 ZeroC, Inc. All rights reserved.
//
// This copy of Ice is licensed to you under the terms described in the
// ICE_LICENSE file included in this distribution.
//
// **********************************************************************
//
// Ice version 3.5.1
//
// <auto-generated>
//
// Generated from file `Cardroid.ice'
//
// Warning: do not edit this file.
//
// </auto-generated>
//

package uclm.esi.cardroid.data.zerocice;

public interface _TripOfferTypOperations extends _TripTypOperations
{
    DateTimeTyp getTripDateTime(Ice.Current __current);

    void setTripDateTime(DateTimeTyp dt, Ice.Current __current);

    DateTimeTyp getTripReturnDateTime(Ice.Current __current);

    void setTripReturnDateTime(DateTimeTyp rdt, Ice.Current __current);

    UserTypPrx getTripDriver(Ice.Current __current);

    void setTripDriver(UserTypPrx driver, Ice.Current __current);

    java.util.List<WaypointTyp> getTripWaypoints(Ice.Current __current);

    void setTripWaypoints(java.util.List<WaypointTyp> waypoints, Ice.Current __current);

    CarTypPrx getTripCar(Ice.Current __current);

    void setTripCar(CarTypPrx tripCar, Ice.Current __current);

    java.util.List<PassengerTyp> getTripPassengers(Ice.Current __current);

    void setTripPassengers(java.util.List<PassengerTyp> passengers, Ice.Current __current);

    double getPrice(Ice.Current __current);

    void setPrice(double price, Ice.Current __current);

    String[] getAllowedFeatures(Ice.Current __current);

    void setAllowedFeatures(String[] allowed, Ice.Current __current);

    boolean addTripWaypoint(PlaceTyp waypoint, Ice.Current __current);

    boolean removeTripWaypoint(int pos, Ice.Current __current);

    int getNTripWaypoints(Ice.Current __current);

    void clearTripWaypoints(Ice.Current __current);

    boolean addTripPassenger(UserTypPrx passenger, int seats, Ice.Current __current);

    boolean removeTripPassenger(UserTypPrx passenger, Ice.Current __current);

    int getNTripPassengers(Ice.Current __current);

    void clearTripPassengers(Ice.Current __current);
}
