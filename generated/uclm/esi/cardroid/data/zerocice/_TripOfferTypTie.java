// **********************************************************************
//
// Copyright (c) 2003-2013 ZeroC, Inc. All rights reserved.
//
// This copy of Ice is licensed to you under the terms described in the
// ICE_LICENSE file included in this distribution.
//
// **********************************************************************
//
// Ice version 3.5.1
//
// <auto-generated>
//
// Generated from file `Cardroid.ice'
//
// Warning: do not edit this file.
//
// </auto-generated>
//

package uclm.esi.cardroid.data.zerocice;

public class _TripOfferTypTie extends TripOfferTyp implements Ice.TieBase
{
    public _TripOfferTypTie()
    {
    }

    public _TripOfferTypTie(_TripOfferTypOperations delegate)
    {
        _ice_delegate = delegate;
    }

    public java.lang.Object ice_delegate()
    {
        return _ice_delegate;
    }

    public void ice_delegate(java.lang.Object delegate)
    {
        _ice_delegate = (_TripOfferTypOperations)delegate;
    }

    public boolean equals(java.lang.Object rhs)
    {
        if(this == rhs)
        {
            return true;
        }
        if(!(rhs instanceof _TripOfferTypTie))
        {
            return false;
        }

        return _ice_delegate.equals(((_TripOfferTypTie)rhs)._ice_delegate);
    }

    public int hashCode()
    {
        return _ice_delegate.hashCode();
    }

    public boolean addTripPassenger(UserTypPrx passenger, int seats, Ice.Current __current)
    {
        return _ice_delegate.addTripPassenger(passenger, seats, __current);
    }

    public boolean addTripWaypoint(PlaceTyp waypoint, Ice.Current __current)
    {
        return _ice_delegate.addTripWaypoint(waypoint, __current);
    }

    public void clearTripPassengers(Ice.Current __current)
    {
        _ice_delegate.clearTripPassengers(__current);
    }

    public void clearTripWaypoints(Ice.Current __current)
    {
        _ice_delegate.clearTripWaypoints(__current);
    }

    public String[] getAllowedFeatures(Ice.Current __current)
    {
        return _ice_delegate.getAllowedFeatures(__current);
    }

    public int getNTripPassengers(Ice.Current __current)
    {
        return _ice_delegate.getNTripPassengers(__current);
    }

    public int getNTripWaypoints(Ice.Current __current)
    {
        return _ice_delegate.getNTripWaypoints(__current);
    }

    public double getPrice(Ice.Current __current)
    {
        return _ice_delegate.getPrice(__current);
    }

    public CarTypPrx getTripCar(Ice.Current __current)
    {
        return _ice_delegate.getTripCar(__current);
    }

    public DateTimeTyp getTripDateTime(Ice.Current __current)
    {
        return _ice_delegate.getTripDateTime(__current);
    }

    public UserTypPrx getTripDriver(Ice.Current __current)
    {
        return _ice_delegate.getTripDriver(__current);
    }

    public java.util.List<PassengerTyp> getTripPassengers(Ice.Current __current)
    {
        return _ice_delegate.getTripPassengers(__current);
    }

    public DateTimeTyp getTripReturnDateTime(Ice.Current __current)
    {
        return _ice_delegate.getTripReturnDateTime(__current);
    }

    public java.util.List<WaypointTyp> getTripWaypoints(Ice.Current __current)
    {
        return _ice_delegate.getTripWaypoints(__current);
    }

    public boolean removeTripPassenger(UserTypPrx passenger, Ice.Current __current)
    {
        return _ice_delegate.removeTripPassenger(passenger, __current);
    }

    public boolean removeTripWaypoint(int pos, Ice.Current __current)
    {
        return _ice_delegate.removeTripWaypoint(pos, __current);
    }

    public void setAllowedFeatures(String[] allowed, Ice.Current __current)
    {
        _ice_delegate.setAllowedFeatures(allowed, __current);
    }

    public void setPrice(double price, Ice.Current __current)
    {
        _ice_delegate.setPrice(price, __current);
    }

    public void setTripCar(CarTypPrx tripCar, Ice.Current __current)
    {
        _ice_delegate.setTripCar(tripCar, __current);
    }

    public void setTripDateTime(DateTimeTyp dt, Ice.Current __current)
    {
        _ice_delegate.setTripDateTime(dt, __current);
    }

    public void setTripDriver(UserTypPrx driver, Ice.Current __current)
    {
        _ice_delegate.setTripDriver(driver, __current);
    }

    public void setTripPassengers(java.util.List<PassengerTyp> passengers, Ice.Current __current)
    {
        _ice_delegate.setTripPassengers(passengers, __current);
    }

    public void setTripReturnDateTime(DateTimeTyp rdt, Ice.Current __current)
    {
        _ice_delegate.setTripReturnDateTime(rdt, __current);
    }

    public void setTripWaypoints(java.util.List<WaypointTyp> waypoints, Ice.Current __current)
    {
        _ice_delegate.setTripWaypoints(waypoints, __current);
    }

    public String getCharacteristics(Ice.Current __current)
    {
        return _ice_delegate.getCharacteristics(__current);
    }

    public int getDistance(Ice.Current __current)
    {
        return _ice_delegate.getDistance(__current);
    }

    public int getNSeats(Ice.Current __current)
    {
        return _ice_delegate.getNSeats(__current);
    }

    public PlaceTyp getPlace1(Ice.Current __current)
    {
        return _ice_delegate.getPlace1(__current);
    }

    public PlaceTyp getPlace2(Ice.Current __current)
    {
        return _ice_delegate.getPlace2(__current);
    }

    public DateTyp getTripDate(Ice.Current __current)
    {
        return _ice_delegate.getTripDate(__current);
    }

    public int getTripId(Ice.Current __current)
    {
        return _ice_delegate.getTripId(__current);
    }

    public Periodicity getTripPeriodicity(Ice.Current __current)
    {
        return _ice_delegate.getTripPeriodicity(__current);
    }

    public DateTyp getTripReturnDate(Ice.Current __current)
    {
        return _ice_delegate.getTripReturnDate(__current);
    }

    public int getTripType(Ice.Current __current)
    {
        return _ice_delegate.getTripType(__current);
    }

    public String[] getTripWeekDays(Ice.Current __current)
    {
        return _ice_delegate.getTripWeekDays(__current);
    }

    public boolean hasCharacteristics(Ice.Current __current)
    {
        return _ice_delegate.hasCharacteristics(__current);
    }

    public boolean hasDistance(Ice.Current __current)
    {
        return _ice_delegate.hasDistance(__current);
    }

    public boolean hasTripReturnDate(Ice.Current __current)
    {
        return _ice_delegate.hasTripReturnDate(__current);
    }

    public boolean hasWeekDaysPeriodicity(Ice.Current __current)
    {
        return _ice_delegate.hasWeekDaysPeriodicity(__current);
    }

    public void setCharacteristics(String characteristics, Ice.Current __current)
    {
        _ice_delegate.setCharacteristics(characteristics, __current);
    }

    public void setDistance(int distance, Ice.Current __current)
    {
        _ice_delegate.setDistance(distance, __current);
    }

    public void setNSeats(int nSeats, Ice.Current __current)
    {
        _ice_delegate.setNSeats(nSeats, __current);
    }

    public void setPlace1(PlaceTyp fromPlace, Ice.Current __current)
    {
        _ice_delegate.setPlace1(fromPlace, __current);
    }

    public void setPlace2(PlaceTyp toPlace, Ice.Current __current)
    {
        _ice_delegate.setPlace2(toPlace, __current);
    }

    public void setTripDate(DateTyp tripDate, Ice.Current __current)
    {
        _ice_delegate.setTripDate(tripDate, __current);
    }

    public void setTripId(int tripId, Ice.Current __current)
    {
        _ice_delegate.setTripId(tripId, __current);
    }

    public void setTripReturnDate(DateTyp tripReturnDate, Ice.Current __current)
    {
        _ice_delegate.setTripReturnDate(tripReturnDate, __current);
    }

    public void setTripType(int type, Ice.Current __current)
    {
        _ice_delegate.setTripType(type, __current);
    }

    public void setTripWeekDaysPeriodicity(String[] tripWeekDays, Periodicity tripPeriodicity, Ice.Current __current)
    {
        _ice_delegate.setTripWeekDaysPeriodicity(tripWeekDays, tripPeriodicity, __current);
    }

    public String _toString(Ice.Current __current)
    {
        return _ice_delegate._toString(__current);
    }

    private _TripOfferTypOperations _ice_delegate;

    public static final long serialVersionUID = -872286346L;
}
