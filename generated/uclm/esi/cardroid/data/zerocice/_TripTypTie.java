// **********************************************************************
//
// Copyright (c) 2003-2013 ZeroC, Inc. All rights reserved.
//
// This copy of Ice is licensed to you under the terms described in the
// ICE_LICENSE file included in this distribution.
//
// **********************************************************************
//
// Ice version 3.5.1
//
// <auto-generated>
//
// Generated from file `Cardroid.ice'
//
// Warning: do not edit this file.
//
// </auto-generated>
//

package uclm.esi.cardroid.data.zerocice;

public class _TripTypTie extends TripTyp implements Ice.TieBase
{
    public _TripTypTie()
    {
    }

    public _TripTypTie(_TripTypOperations delegate)
    {
        _ice_delegate = delegate;
    }

    public java.lang.Object ice_delegate()
    {
        return _ice_delegate;
    }

    public void ice_delegate(java.lang.Object delegate)
    {
        _ice_delegate = (_TripTypOperations)delegate;
    }

    public boolean equals(java.lang.Object rhs)
    {
        if(this == rhs)
        {
            return true;
        }
        if(!(rhs instanceof _TripTypTie))
        {
            return false;
        }

        return _ice_delegate.equals(((_TripTypTie)rhs)._ice_delegate);
    }

    public int hashCode()
    {
        return _ice_delegate.hashCode();
    }

    public String getCharacteristics(Ice.Current __current)
    {
        return _ice_delegate.getCharacteristics(__current);
    }

    public int getDistance(Ice.Current __current)
    {
        return _ice_delegate.getDistance(__current);
    }

    public int getNSeats(Ice.Current __current)
    {
        return _ice_delegate.getNSeats(__current);
    }

    public PlaceTyp getPlace1(Ice.Current __current)
    {
        return _ice_delegate.getPlace1(__current);
    }

    public PlaceTyp getPlace2(Ice.Current __current)
    {
        return _ice_delegate.getPlace2(__current);
    }

    public DateTyp getTripDate(Ice.Current __current)
    {
        return _ice_delegate.getTripDate(__current);
    }

    public int getTripId(Ice.Current __current)
    {
        return _ice_delegate.getTripId(__current);
    }

    public Periodicity getTripPeriodicity(Ice.Current __current)
    {
        return _ice_delegate.getTripPeriodicity(__current);
    }

    public DateTyp getTripReturnDate(Ice.Current __current)
    {
        return _ice_delegate.getTripReturnDate(__current);
    }

    public int getTripType(Ice.Current __current)
    {
        return _ice_delegate.getTripType(__current);
    }

    public String[] getTripWeekDays(Ice.Current __current)
    {
        return _ice_delegate.getTripWeekDays(__current);
    }

    public boolean hasCharacteristics(Ice.Current __current)
    {
        return _ice_delegate.hasCharacteristics(__current);
    }

    public boolean hasDistance(Ice.Current __current)
    {
        return _ice_delegate.hasDistance(__current);
    }

    public boolean hasTripReturnDate(Ice.Current __current)
    {
        return _ice_delegate.hasTripReturnDate(__current);
    }

    public boolean hasWeekDaysPeriodicity(Ice.Current __current)
    {
        return _ice_delegate.hasWeekDaysPeriodicity(__current);
    }

    public void setCharacteristics(String characteristics, Ice.Current __current)
    {
        _ice_delegate.setCharacteristics(characteristics, __current);
    }

    public void setDistance(int distance, Ice.Current __current)
    {
        _ice_delegate.setDistance(distance, __current);
    }

    public void setNSeats(int nSeats, Ice.Current __current)
    {
        _ice_delegate.setNSeats(nSeats, __current);
    }

    public void setPlace1(PlaceTyp fromPlace, Ice.Current __current)
    {
        _ice_delegate.setPlace1(fromPlace, __current);
    }

    public void setPlace2(PlaceTyp toPlace, Ice.Current __current)
    {
        _ice_delegate.setPlace2(toPlace, __current);
    }

    public void setTripDate(DateTyp tripDate, Ice.Current __current)
    {
        _ice_delegate.setTripDate(tripDate, __current);
    }

    public void setTripId(int tripId, Ice.Current __current)
    {
        _ice_delegate.setTripId(tripId, __current);
    }

    public void setTripReturnDate(DateTyp tripReturnDate, Ice.Current __current)
    {
        _ice_delegate.setTripReturnDate(tripReturnDate, __current);
    }

    public void setTripType(int type, Ice.Current __current)
    {
        _ice_delegate.setTripType(type, __current);
    }

    public void setTripWeekDaysPeriodicity(String[] tripWeekDays, Periodicity tripPeriodicity, Ice.Current __current)
    {
        _ice_delegate.setTripWeekDaysPeriodicity(tripWeekDays, tripPeriodicity, __current);
    }

    public String _toString(Ice.Current __current)
    {
        return _ice_delegate._toString(__current);
    }

    private _TripTypOperations _ice_delegate;

    public static final long serialVersionUID = 425822967L;
}
