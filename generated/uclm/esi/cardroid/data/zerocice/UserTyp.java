// **********************************************************************
//
// Copyright (c) 2003-2013 ZeroC, Inc. All rights reserved.
//
// This copy of Ice is licensed to you under the terms described in the
// ICE_LICENSE file included in this distribution.
//
// **********************************************************************
//
// Ice version 3.5.1
//
// <auto-generated>
//
// Generated from file `Cardroid.ice'
//
// Warning: do not edit this file.
//
// </auto-generated>
//

package uclm.esi.cardroid.data.zerocice;

public abstract class UserTyp extends Ice.ObjectImpl
                              implements _UserTypOperations,
                                         _UserTypOperationsNC
{
    public UserTyp()
    {
    }

    public UserTyp(String name, String surname, PlaceTyp home, int telephone, String email, java.util.List<CarTypPrx> cars)
    {
        this.name = name;
        this.surname = surname;
        this.home = home;
        this.telephone = telephone;
        this.email = email;
        this.cars = cars;
    }

    public UserTyp(String name, String surname, byte[] userAvatarBytes, PlaceTyp home, int telephone, String email, int userReputation, java.util.List<CarTypPrx> cars)
    {
        this.name = name;
        this.surname = surname;
        setUserAvatarBytes(userAvatarBytes);
        this.home = home;
        this.telephone = telephone;
        this.email = email;
        setUserReputation(userReputation);
        this.cars = cars;
    }

    public static final String[] __ids =
    {
        "::Ice::Object",
        "::cardroid::data::zerocice::UserTyp"
    };

    public boolean ice_isA(String s)
    {
        return java.util.Arrays.binarySearch(__ids, s) >= 0;
    }

    public boolean ice_isA(String s, Ice.Current __current)
    {
        return java.util.Arrays.binarySearch(__ids, s) >= 0;
    }

    public String[] ice_ids()
    {
        return __ids;
    }

    public String[] ice_ids(Ice.Current __current)
    {
        return __ids;
    }

    public String ice_id()
    {
        return __ids[1];
    }

    public String ice_id(Ice.Current __current)
    {
        return __ids[1];
    }

    public static String ice_staticId()
    {
        return __ids[1];
    }

    public final boolean addCar(CarTyp c)
    {
        return addCar(c, null);
    }

    public final void clearCars()
    {
        clearCars(null);
    }

    public final void decreaseReputation(int decrease)
    {
        decreaseReputation(decrease, null);
    }

    public final void decreaseReputation1()
    {
        decreaseReputation1(null);
    }

    public final byte[] getAvatarBytes()
    {
        return getAvatarBytes(null);
    }

    public final String getEmail()
    {
        return getEmail(null);
    }

    public final int getNCars()
    {
        return getNCars(null);
    }

    public final String getName()
    {
        return getName(null);
    }

    public final int getReputation()
    {
        return getReputation(null);
    }

    public final String getSurname()
    {
        return getSurname(null);
    }

    public final int getTelephone()
    {
        return getTelephone(null);
    }

    public final java.util.List<CarTypPrx> getUserCars()
    {
        return getUserCars(null);
    }

    public final PlaceTyp getUserHome()
    {
        return getUserHome(null);
    }

    public final boolean hasAvatar()
    {
        return hasAvatar(null);
    }

    public final boolean hasReputation()
    {
        return hasReputation(null);
    }

    public final void increaseReputation(int increase)
    {
        increaseReputation(increase, null);
    }

    public final void increaseReputation1()
    {
        increaseReputation1(null);
    }

    public final boolean removeCar(CarTyp c)
    {
        return removeCar(c, null);
    }

    public final void setAvatarBytes(byte[] avatarBytes)
    {
        setAvatarBytes(avatarBytes, null);
    }

    public final void setEmail(String email)
    {
        setEmail(email, null);
    }

    public final void setName(String name)
    {
        setName(name, null);
    }

    public final void setReputation(int reputation)
    {
        setReputation(reputation, null);
    }

    public final void setSurname(String surname)
    {
        setSurname(surname, null);
    }

    public final void setTelephone(int telephone)
    {
        setTelephone(telephone, null);
    }

    public final void setUserCars(java.util.List<CarTypPrx> cars)
    {
        setUserCars(cars, null);
    }

    public final void setUserHome(PlaceTyp home)
    {
        setUserHome(home, null);
    }

    public final String _toString()
    {
        return _toString(null);
    }

    public static Ice.DispatchStatus ___getName(UserTyp __obj, IceInternal.Incoming __inS, Ice.Current __current)
    {
        __checkMode(Ice.OperationMode.Idempotent, __current.mode);
        __inS.readEmptyParams();
        String __ret = __obj.getName(__current);
        IceInternal.BasicStream __os = __inS.__startWriteParams(Ice.FormatType.DefaultFormat);
        __os.writeString(__ret);
        __inS.__endWriteParams(true);
        return Ice.DispatchStatus.DispatchOK;
    }

    public static Ice.DispatchStatus ___setName(UserTyp __obj, IceInternal.Incoming __inS, Ice.Current __current)
    {
        __checkMode(Ice.OperationMode.Idempotent, __current.mode);
        IceInternal.BasicStream __is = __inS.startReadParams();
        String name;
        name = __is.readString();
        __inS.endReadParams();
        __obj.setName(name, __current);
        __inS.__writeEmptyParams();
        return Ice.DispatchStatus.DispatchOK;
    }

    public static Ice.DispatchStatus ___getSurname(UserTyp __obj, IceInternal.Incoming __inS, Ice.Current __current)
    {
        __checkMode(Ice.OperationMode.Idempotent, __current.mode);
        __inS.readEmptyParams();
        String __ret = __obj.getSurname(__current);
        IceInternal.BasicStream __os = __inS.__startWriteParams(Ice.FormatType.DefaultFormat);
        __os.writeString(__ret);
        __inS.__endWriteParams(true);
        return Ice.DispatchStatus.DispatchOK;
    }

    public static Ice.DispatchStatus ___setSurname(UserTyp __obj, IceInternal.Incoming __inS, Ice.Current __current)
    {
        __checkMode(Ice.OperationMode.Idempotent, __current.mode);
        IceInternal.BasicStream __is = __inS.startReadParams();
        String surname;
        surname = __is.readString();
        __inS.endReadParams();
        __obj.setSurname(surname, __current);
        __inS.__writeEmptyParams();
        return Ice.DispatchStatus.DispatchOK;
    }

    public static Ice.DispatchStatus ___getAvatarBytes(UserTyp __obj, IceInternal.Incoming __inS, Ice.Current __current)
    {
        __checkMode(Ice.OperationMode.Idempotent, __current.mode);
        __inS.readEmptyParams();
        byte[] __ret = __obj.getAvatarBytes(__current);
        IceInternal.BasicStream __os = __inS.__startWriteParams(Ice.FormatType.DefaultFormat);
        BlobHelper.write(__os, __ret);
        __inS.__endWriteParams(true);
        return Ice.DispatchStatus.DispatchOK;
    }

    public static Ice.DispatchStatus ___setAvatarBytes(UserTyp __obj, IceInternal.Incoming __inS, Ice.Current __current)
    {
        __checkMode(Ice.OperationMode.Idempotent, __current.mode);
        IceInternal.BasicStream __is = __inS.startReadParams();
        byte[] avatarBytes;
        avatarBytes = BlobHelper.read(__is);
        __inS.endReadParams();
        __obj.setAvatarBytes(avatarBytes, __current);
        __inS.__writeEmptyParams();
        return Ice.DispatchStatus.DispatchOK;
    }

    public static Ice.DispatchStatus ___hasAvatar(UserTyp __obj, IceInternal.Incoming __inS, Ice.Current __current)
    {
        __checkMode(Ice.OperationMode.Idempotent, __current.mode);
        __inS.readEmptyParams();
        boolean __ret = __obj.hasAvatar(__current);
        IceInternal.BasicStream __os = __inS.__startWriteParams(Ice.FormatType.DefaultFormat);
        __os.writeBool(__ret);
        __inS.__endWriteParams(true);
        return Ice.DispatchStatus.DispatchOK;
    }

    public static Ice.DispatchStatus ___getUserHome(UserTyp __obj, IceInternal.Incoming __inS, Ice.Current __current)
    {
        __checkMode(Ice.OperationMode.Idempotent, __current.mode);
        __inS.readEmptyParams();
        PlaceTyp __ret = __obj.getUserHome(__current);
        IceInternal.BasicStream __os = __inS.__startWriteParams(Ice.FormatType.DefaultFormat);
        __os.writeObject(__ret);
        __os.writePendingObjects();
        __inS.__endWriteParams(true);
        return Ice.DispatchStatus.DispatchOK;
    }

    public static Ice.DispatchStatus ___setUserHome(UserTyp __obj, IceInternal.Incoming __inS, Ice.Current __current)
    {
        __checkMode(Ice.OperationMode.Idempotent, __current.mode);
        IceInternal.BasicStream __is = __inS.startReadParams();
        PlaceTypHolder home = new PlaceTypHolder();
        __is.readObject(home);
        __is.readPendingObjects();
        __inS.endReadParams();
        __obj.setUserHome(home.value, __current);
        __inS.__writeEmptyParams();
        return Ice.DispatchStatus.DispatchOK;
    }

    public static Ice.DispatchStatus ___getTelephone(UserTyp __obj, IceInternal.Incoming __inS, Ice.Current __current)
    {
        __checkMode(Ice.OperationMode.Idempotent, __current.mode);
        __inS.readEmptyParams();
        int __ret = __obj.getTelephone(__current);
        IceInternal.BasicStream __os = __inS.__startWriteParams(Ice.FormatType.DefaultFormat);
        __os.writeInt(__ret);
        __inS.__endWriteParams(true);
        return Ice.DispatchStatus.DispatchOK;
    }

    public static Ice.DispatchStatus ___setTelephone(UserTyp __obj, IceInternal.Incoming __inS, Ice.Current __current)
    {
        __checkMode(Ice.OperationMode.Idempotent, __current.mode);
        IceInternal.BasicStream __is = __inS.startReadParams();
        int telephone;
        telephone = __is.readInt();
        __inS.endReadParams();
        __obj.setTelephone(telephone, __current);
        __inS.__writeEmptyParams();
        return Ice.DispatchStatus.DispatchOK;
    }

    public static Ice.DispatchStatus ___getEmail(UserTyp __obj, IceInternal.Incoming __inS, Ice.Current __current)
    {
        __checkMode(Ice.OperationMode.Idempotent, __current.mode);
        __inS.readEmptyParams();
        String __ret = __obj.getEmail(__current);
        IceInternal.BasicStream __os = __inS.__startWriteParams(Ice.FormatType.DefaultFormat);
        __os.writeString(__ret);
        __inS.__endWriteParams(true);
        return Ice.DispatchStatus.DispatchOK;
    }

    public static Ice.DispatchStatus ___setEmail(UserTyp __obj, IceInternal.Incoming __inS, Ice.Current __current)
    {
        __checkMode(Ice.OperationMode.Idempotent, __current.mode);
        IceInternal.BasicStream __is = __inS.startReadParams();
        String email;
        email = __is.readString();
        __inS.endReadParams();
        __obj.setEmail(email, __current);
        __inS.__writeEmptyParams();
        return Ice.DispatchStatus.DispatchOK;
    }

    public static Ice.DispatchStatus ___getReputation(UserTyp __obj, IceInternal.Incoming __inS, Ice.Current __current)
    {
        __checkMode(Ice.OperationMode.Idempotent, __current.mode);
        __inS.readEmptyParams();
        int __ret = __obj.getReputation(__current);
        IceInternal.BasicStream __os = __inS.__startWriteParams(Ice.FormatType.DefaultFormat);
        __os.writeInt(__ret);
        __inS.__endWriteParams(true);
        return Ice.DispatchStatus.DispatchOK;
    }

    public static Ice.DispatchStatus ___setReputation(UserTyp __obj, IceInternal.Incoming __inS, Ice.Current __current)
    {
        __checkMode(Ice.OperationMode.Idempotent, __current.mode);
        IceInternal.BasicStream __is = __inS.startReadParams();
        int reputation;
        reputation = __is.readInt();
        __inS.endReadParams();
        __obj.setReputation(reputation, __current);
        __inS.__writeEmptyParams();
        return Ice.DispatchStatus.DispatchOK;
    }

    public static Ice.DispatchStatus ___hasReputation(UserTyp __obj, IceInternal.Incoming __inS, Ice.Current __current)
    {
        __checkMode(Ice.OperationMode.Idempotent, __current.mode);
        __inS.readEmptyParams();
        boolean __ret = __obj.hasReputation(__current);
        IceInternal.BasicStream __os = __inS.__startWriteParams(Ice.FormatType.DefaultFormat);
        __os.writeBool(__ret);
        __inS.__endWriteParams(true);
        return Ice.DispatchStatus.DispatchOK;
    }

    public static Ice.DispatchStatus ___getUserCars(UserTyp __obj, IceInternal.Incoming __inS, Ice.Current __current)
    {
        __checkMode(Ice.OperationMode.Idempotent, __current.mode);
        __inS.readEmptyParams();
        java.util.List<CarTypPrx> __ret = __obj.getUserCars(__current);
        IceInternal.BasicStream __os = __inS.__startWriteParams(Ice.FormatType.DefaultFormat);
        CarCollectionHelper.write(__os, __ret);
        __inS.__endWriteParams(true);
        return Ice.DispatchStatus.DispatchOK;
    }

    public static Ice.DispatchStatus ___setUserCars(UserTyp __obj, IceInternal.Incoming __inS, Ice.Current __current)
    {
        __checkMode(Ice.OperationMode.Idempotent, __current.mode);
        IceInternal.BasicStream __is = __inS.startReadParams();
        java.util.List<CarTypPrx> cars;
        cars = CarCollectionHelper.read(__is);
        __inS.endReadParams();
        __obj.setUserCars(cars, __current);
        __inS.__writeEmptyParams();
        return Ice.DispatchStatus.DispatchOK;
    }

    public static Ice.DispatchStatus ___toString(UserTyp __obj, IceInternal.Incoming __inS, Ice.Current __current)
    {
        __checkMode(Ice.OperationMode.Idempotent, __current.mode);
        __inS.readEmptyParams();
        String __ret = __obj._toString(__current);
        IceInternal.BasicStream __os = __inS.__startWriteParams(Ice.FormatType.DefaultFormat);
        __os.writeString(__ret);
        __inS.__endWriteParams(true);
        return Ice.DispatchStatus.DispatchOK;
    }

    public static Ice.DispatchStatus ___increaseReputation1(UserTyp __obj, IceInternal.Incoming __inS, Ice.Current __current)
    {
        __checkMode(Ice.OperationMode.Normal, __current.mode);
        __inS.readEmptyParams();
        __obj.increaseReputation1(__current);
        __inS.__writeEmptyParams();
        return Ice.DispatchStatus.DispatchOK;
    }

    public static Ice.DispatchStatus ___increaseReputation(UserTyp __obj, IceInternal.Incoming __inS, Ice.Current __current)
    {
        __checkMode(Ice.OperationMode.Normal, __current.mode);
        IceInternal.BasicStream __is = __inS.startReadParams();
        int increase;
        increase = __is.readInt();
        __inS.endReadParams();
        __obj.increaseReputation(increase, __current);
        __inS.__writeEmptyParams();
        return Ice.DispatchStatus.DispatchOK;
    }

    public static Ice.DispatchStatus ___decreaseReputation1(UserTyp __obj, IceInternal.Incoming __inS, Ice.Current __current)
    {
        __checkMode(Ice.OperationMode.Normal, __current.mode);
        __inS.readEmptyParams();
        __obj.decreaseReputation1(__current);
        __inS.__writeEmptyParams();
        return Ice.DispatchStatus.DispatchOK;
    }

    public static Ice.DispatchStatus ___decreaseReputation(UserTyp __obj, IceInternal.Incoming __inS, Ice.Current __current)
    {
        __checkMode(Ice.OperationMode.Normal, __current.mode);
        IceInternal.BasicStream __is = __inS.startReadParams();
        int decrease;
        decrease = __is.readInt();
        __inS.endReadParams();
        __obj.decreaseReputation(decrease, __current);
        __inS.__writeEmptyParams();
        return Ice.DispatchStatus.DispatchOK;
    }

    public static Ice.DispatchStatus ___addCar(UserTyp __obj, IceInternal.Incoming __inS, Ice.Current __current)
    {
        __checkMode(Ice.OperationMode.Normal, __current.mode);
        IceInternal.BasicStream __is = __inS.startReadParams();
        CarTypHolder c = new CarTypHolder();
        __is.readObject(c);
        __is.readPendingObjects();
        __inS.endReadParams();
        boolean __ret = __obj.addCar(c.value, __current);
        IceInternal.BasicStream __os = __inS.__startWriteParams(Ice.FormatType.DefaultFormat);
        __os.writeBool(__ret);
        __inS.__endWriteParams(true);
        return Ice.DispatchStatus.DispatchOK;
    }

    public static Ice.DispatchStatus ___removeCar(UserTyp __obj, IceInternal.Incoming __inS, Ice.Current __current)
    {
        __checkMode(Ice.OperationMode.Normal, __current.mode);
        IceInternal.BasicStream __is = __inS.startReadParams();
        CarTypHolder c = new CarTypHolder();
        __is.readObject(c);
        __is.readPendingObjects();
        __inS.endReadParams();
        boolean __ret = __obj.removeCar(c.value, __current);
        IceInternal.BasicStream __os = __inS.__startWriteParams(Ice.FormatType.DefaultFormat);
        __os.writeBool(__ret);
        __inS.__endWriteParams(true);
        return Ice.DispatchStatus.DispatchOK;
    }

    public static Ice.DispatchStatus ___getNCars(UserTyp __obj, IceInternal.Incoming __inS, Ice.Current __current)
    {
        __checkMode(Ice.OperationMode.Idempotent, __current.mode);
        __inS.readEmptyParams();
        int __ret = __obj.getNCars(__current);
        IceInternal.BasicStream __os = __inS.__startWriteParams(Ice.FormatType.DefaultFormat);
        __os.writeInt(__ret);
        __inS.__endWriteParams(true);
        return Ice.DispatchStatus.DispatchOK;
    }

    public static Ice.DispatchStatus ___clearCars(UserTyp __obj, IceInternal.Incoming __inS, Ice.Current __current)
    {
        __checkMode(Ice.OperationMode.Idempotent, __current.mode);
        __inS.readEmptyParams();
        __obj.clearCars(__current);
        __inS.__writeEmptyParams();
        return Ice.DispatchStatus.DispatchOK;
    }

    private final static String[] __all =
    {
        "addCar",
        "clearCars",
        "decreaseReputation",
        "decreaseReputation1",
        "getAvatarBytes",
        "getEmail",
        "getNCars",
        "getName",
        "getReputation",
        "getSurname",
        "getTelephone",
        "getUserCars",
        "getUserHome",
        "hasAvatar",
        "hasReputation",
        "ice_id",
        "ice_ids",
        "ice_isA",
        "ice_ping",
        "increaseReputation",
        "increaseReputation1",
        "removeCar",
        "setAvatarBytes",
        "setEmail",
        "setName",
        "setReputation",
        "setSurname",
        "setTelephone",
        "setUserCars",
        "setUserHome",
        "toString"
    };

    public Ice.DispatchStatus __dispatch(IceInternal.Incoming in, Ice.Current __current)
    {
        int pos = java.util.Arrays.binarySearch(__all, __current.operation);
        if(pos < 0)
        {
            throw new Ice.OperationNotExistException(__current.id, __current.facet, __current.operation);
        }

        switch(pos)
        {
            case 0:
            {
                return ___addCar(this, in, __current);
            }
            case 1:
            {
                return ___clearCars(this, in, __current);
            }
            case 2:
            {
                return ___decreaseReputation(this, in, __current);
            }
            case 3:
            {
                return ___decreaseReputation1(this, in, __current);
            }
            case 4:
            {
                return ___getAvatarBytes(this, in, __current);
            }
            case 5:
            {
                return ___getEmail(this, in, __current);
            }
            case 6:
            {
                return ___getNCars(this, in, __current);
            }
            case 7:
            {
                return ___getName(this, in, __current);
            }
            case 8:
            {
                return ___getReputation(this, in, __current);
            }
            case 9:
            {
                return ___getSurname(this, in, __current);
            }
            case 10:
            {
                return ___getTelephone(this, in, __current);
            }
            case 11:
            {
                return ___getUserCars(this, in, __current);
            }
            case 12:
            {
                return ___getUserHome(this, in, __current);
            }
            case 13:
            {
                return ___hasAvatar(this, in, __current);
            }
            case 14:
            {
                return ___hasReputation(this, in, __current);
            }
            case 15:
            {
                return ___ice_id(this, in, __current);
            }
            case 16:
            {
                return ___ice_ids(this, in, __current);
            }
            case 17:
            {
                return ___ice_isA(this, in, __current);
            }
            case 18:
            {
                return ___ice_ping(this, in, __current);
            }
            case 19:
            {
                return ___increaseReputation(this, in, __current);
            }
            case 20:
            {
                return ___increaseReputation1(this, in, __current);
            }
            case 21:
            {
                return ___removeCar(this, in, __current);
            }
            case 22:
            {
                return ___setAvatarBytes(this, in, __current);
            }
            case 23:
            {
                return ___setEmail(this, in, __current);
            }
            case 24:
            {
                return ___setName(this, in, __current);
            }
            case 25:
            {
                return ___setReputation(this, in, __current);
            }
            case 26:
            {
                return ___setSurname(this, in, __current);
            }
            case 27:
            {
                return ___setTelephone(this, in, __current);
            }
            case 28:
            {
                return ___setUserCars(this, in, __current);
            }
            case 29:
            {
                return ___setUserHome(this, in, __current);
            }
            case 30:
            {
                return ___toString(this, in, __current);
            }
        }

        assert(false);
        throw new Ice.OperationNotExistException(__current.id, __current.facet, __current.operation);
    }

    protected void __writeImpl(IceInternal.BasicStream __os)
    {
        __os.startWriteSlice(ice_staticId(), -1, true);
        __os.writeString(name);
        __os.writeString(surname);
        __os.writeObject(home);
        __os.writeInt(telephone);
        __os.writeString(email);
        CarCollectionHelper.write(__os, cars);
        if(__has_userAvatarBytes && __os.writeOpt(3, Ice.OptionalFormat.VSize))
        {
            BlobHelper.write(__os, userAvatarBytes);
        }
        if(__has_userReputation && __os.writeOpt(7, Ice.OptionalFormat.F4))
        {
            __os.writeInt(userReputation);
        }
        __os.endWriteSlice();
    }

    private class Patcher implements IceInternal.Patcher
    {
        public void
        patch(Ice.Object v)
        {
            if(v == null || v instanceof PlaceTyp)
            {
                home = (PlaceTyp)v;
            }
            else
            {
                IceInternal.Ex.throwUOE(type(), v);
            }
        }

        public String
        type()
        {
            return "::cardroid::data::zerocice::PlaceTyp";
        }
    }

    protected void __readImpl(IceInternal.BasicStream __is)
    {
        __is.startReadSlice();
        name = __is.readString();
        surname = __is.readString();
        __is.readObject(new Patcher());
        telephone = __is.readInt();
        email = __is.readString();
        cars = CarCollectionHelper.read(__is);
        if(__has_userAvatarBytes = __is.readOpt(3, Ice.OptionalFormat.VSize))
        {
            userAvatarBytes = BlobHelper.read(__is);
        }
        if(__has_userReputation = __is.readOpt(7, Ice.OptionalFormat.F4))
        {
            userReputation = __is.readInt();
        }
        __is.endReadSlice();
    }

    public String name;

    public String surname;

    private byte[] userAvatarBytes;
    private boolean __has_userAvatarBytes;

    public byte[]
    getUserAvatarBytes()
    {
        if(!__has_userAvatarBytes)
        {
            throw new java.lang.IllegalStateException("userAvatarBytes is not set");
        }
        return userAvatarBytes;
    }

    public void
    setUserAvatarBytes(byte[] _userAvatarBytes)
    {
        __has_userAvatarBytes = true;
        userAvatarBytes = _userAvatarBytes;
    }

    public boolean
    hasUserAvatarBytes()
    {
        return __has_userAvatarBytes;
    }

    public void
    clearUserAvatarBytes()
    {
        __has_userAvatarBytes = false;
    }

    public void
    optionalUserAvatarBytes(Ice.Optional<byte[]> __v)
    {
        if(__v == null || !__v.isSet())
        {
            __has_userAvatarBytes = false;
        }
        else
        {
            __has_userAvatarBytes = true;
            userAvatarBytes = __v.get();
        }
    }

    public Ice.Optional<byte[]>
    optionalUserAvatarBytes()
    {
        if(__has_userAvatarBytes)
        {
            return new Ice.Optional<byte[]>(userAvatarBytes);
        }
        else
        {
            return new Ice.Optional<byte[]>();
        }
    }

    public byte
    getUserAvatarBytes(int _index)
    {
        if(!__has_userAvatarBytes)
        {
            throw new java.lang.IllegalStateException("userAvatarBytes is not set");
        }
        return userAvatarBytes[_index];
    }

    public void
    setUserAvatarBytes(int _index, byte _val)
    {
        if(!__has_userAvatarBytes)
        {
            throw new java.lang.IllegalStateException("userAvatarBytes is not set");
        }
        userAvatarBytes[_index] = _val;
    }

    public PlaceTyp home;

    public int telephone;

    public String email;

    private int userReputation;
    private boolean __has_userReputation;

    public int
    getUserReputation()
    {
        if(!__has_userReputation)
        {
            throw new java.lang.IllegalStateException("userReputation is not set");
        }
        return userReputation;
    }

    public void
    setUserReputation(int _userReputation)
    {
        __has_userReputation = true;
        userReputation = _userReputation;
    }

    public boolean
    hasUserReputation()
    {
        return __has_userReputation;
    }

    public void
    clearUserReputation()
    {
        __has_userReputation = false;
    }

    public void
    optionalUserReputation(Ice.IntOptional __v)
    {
        if(__v == null || !__v.isSet())
        {
            __has_userReputation = false;
        }
        else
        {
            __has_userReputation = true;
            userReputation = __v.get();
        }
    }

    public Ice.IntOptional
    optionalUserReputation()
    {
        if(__has_userReputation)
        {
            return new Ice.IntOptional(userReputation);
        }
        else
        {
            return new Ice.IntOptional();
        }
    }

    public java.util.List<CarTypPrx> cars;

    public static final long serialVersionUID = -659061564L;
}
