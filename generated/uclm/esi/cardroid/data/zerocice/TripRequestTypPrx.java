// **********************************************************************
//
// Copyright (c) 2003-2013 ZeroC, Inc. All rights reserved.
//
// This copy of Ice is licensed to you under the terms described in the
// ICE_LICENSE file included in this distribution.
//
// **********************************************************************
//
// Ice version 3.5.1
//
// <auto-generated>
//
// Generated from file `Cardroid.ice'
//
// Warning: do not edit this file.
//
// </auto-generated>
//

package uclm.esi.cardroid.data.zerocice;

public interface TripRequestTypPrx extends TripTypPrx
{
    public DateTimePrefsTyp getTripDateTimePrefs();

    public DateTimePrefsTyp getTripDateTimePrefs(java.util.Map<String, String> __ctx);

    public Ice.AsyncResult begin_getTripDateTimePrefs();

    public Ice.AsyncResult begin_getTripDateTimePrefs(java.util.Map<String, String> __ctx);

    public Ice.AsyncResult begin_getTripDateTimePrefs(Ice.Callback __cb);

    public Ice.AsyncResult begin_getTripDateTimePrefs(java.util.Map<String, String> __ctx, Ice.Callback __cb);

    public Ice.AsyncResult begin_getTripDateTimePrefs(Callback_TripRequestTyp_getTripDateTimePrefs __cb);

    public Ice.AsyncResult begin_getTripDateTimePrefs(java.util.Map<String, String> __ctx, Callback_TripRequestTyp_getTripDateTimePrefs __cb);

    public DateTimePrefsTyp end_getTripDateTimePrefs(Ice.AsyncResult __result);

    public void setTripDateTimePrefs(DateTimePrefsTyp dtp);

    public void setTripDateTimePrefs(DateTimePrefsTyp dtp, java.util.Map<String, String> __ctx);

    public Ice.AsyncResult begin_setTripDateTimePrefs(DateTimePrefsTyp dtp);

    public Ice.AsyncResult begin_setTripDateTimePrefs(DateTimePrefsTyp dtp, java.util.Map<String, String> __ctx);

    public Ice.AsyncResult begin_setTripDateTimePrefs(DateTimePrefsTyp dtp, Ice.Callback __cb);

    public Ice.AsyncResult begin_setTripDateTimePrefs(DateTimePrefsTyp dtp, java.util.Map<String, String> __ctx, Ice.Callback __cb);

    public Ice.AsyncResult begin_setTripDateTimePrefs(DateTimePrefsTyp dtp, Callback_TripRequestTyp_setTripDateTimePrefs __cb);

    public Ice.AsyncResult begin_setTripDateTimePrefs(DateTimePrefsTyp dtp, java.util.Map<String, String> __ctx, Callback_TripRequestTyp_setTripDateTimePrefs __cb);

    public void end_setTripDateTimePrefs(Ice.AsyncResult __result);

    public DateTimePrefsTyp getTripReturnDateTimePrefs();

    public DateTimePrefsTyp getTripReturnDateTimePrefs(java.util.Map<String, String> __ctx);

    public Ice.AsyncResult begin_getTripReturnDateTimePrefs();

    public Ice.AsyncResult begin_getTripReturnDateTimePrefs(java.util.Map<String, String> __ctx);

    public Ice.AsyncResult begin_getTripReturnDateTimePrefs(Ice.Callback __cb);

    public Ice.AsyncResult begin_getTripReturnDateTimePrefs(java.util.Map<String, String> __ctx, Ice.Callback __cb);

    public Ice.AsyncResult begin_getTripReturnDateTimePrefs(Callback_TripRequestTyp_getTripReturnDateTimePrefs __cb);

    public Ice.AsyncResult begin_getTripReturnDateTimePrefs(java.util.Map<String, String> __ctx, Callback_TripRequestTyp_getTripReturnDateTimePrefs __cb);

    public DateTimePrefsTyp end_getTripReturnDateTimePrefs(Ice.AsyncResult __result);

    public void setTripReturnDateTimePrefs(DateTimePrefsTyp rdtp);

    public void setTripReturnDateTimePrefs(DateTimePrefsTyp rdtp, java.util.Map<String, String> __ctx);

    public Ice.AsyncResult begin_setTripReturnDateTimePrefs(DateTimePrefsTyp rdtp);

    public Ice.AsyncResult begin_setTripReturnDateTimePrefs(DateTimePrefsTyp rdtp, java.util.Map<String, String> __ctx);

    public Ice.AsyncResult begin_setTripReturnDateTimePrefs(DateTimePrefsTyp rdtp, Ice.Callback __cb);

    public Ice.AsyncResult begin_setTripReturnDateTimePrefs(DateTimePrefsTyp rdtp, java.util.Map<String, String> __ctx, Ice.Callback __cb);

    public Ice.AsyncResult begin_setTripReturnDateTimePrefs(DateTimePrefsTyp rdtp, Callback_TripRequestTyp_setTripReturnDateTimePrefs __cb);

    public Ice.AsyncResult begin_setTripReturnDateTimePrefs(DateTimePrefsTyp rdtp, java.util.Map<String, String> __ctx, Callback_TripRequestTyp_setTripReturnDateTimePrefs __cb);

    public void end_setTripReturnDateTimePrefs(Ice.AsyncResult __result);

    public UserTypPrx getTripRequester();

    public UserTypPrx getTripRequester(java.util.Map<String, String> __ctx);

    public Ice.AsyncResult begin_getTripRequester();

    public Ice.AsyncResult begin_getTripRequester(java.util.Map<String, String> __ctx);

    public Ice.AsyncResult begin_getTripRequester(Ice.Callback __cb);

    public Ice.AsyncResult begin_getTripRequester(java.util.Map<String, String> __ctx, Ice.Callback __cb);

    public Ice.AsyncResult begin_getTripRequester(Callback_TripRequestTyp_getTripRequester __cb);

    public Ice.AsyncResult begin_getTripRequester(java.util.Map<String, String> __ctx, Callback_TripRequestTyp_getTripRequester __cb);

    public UserTypPrx end_getTripRequester(Ice.AsyncResult __result);

    public void setTripRequester(UserTypPrx requester);

    public void setTripRequester(UserTypPrx requester, java.util.Map<String, String> __ctx);

    public Ice.AsyncResult begin_setTripRequester(UserTypPrx requester);

    public Ice.AsyncResult begin_setTripRequester(UserTypPrx requester, java.util.Map<String, String> __ctx);

    public Ice.AsyncResult begin_setTripRequester(UserTypPrx requester, Ice.Callback __cb);

    public Ice.AsyncResult begin_setTripRequester(UserTypPrx requester, java.util.Map<String, String> __ctx, Ice.Callback __cb);

    public Ice.AsyncResult begin_setTripRequester(UserTypPrx requester, Callback_TripRequestTyp_setTripRequester __cb);

    public Ice.AsyncResult begin_setTripRequester(UserTypPrx requester, java.util.Map<String, String> __ctx, Callback_TripRequestTyp_setTripRequester __cb);

    public void end_setTripRequester(Ice.AsyncResult __result);
}
