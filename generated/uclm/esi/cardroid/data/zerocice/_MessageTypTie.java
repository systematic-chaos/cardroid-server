// **********************************************************************
//
// Copyright (c) 2003-2013 ZeroC, Inc. All rights reserved.
//
// This copy of Ice is licensed to you under the terms described in the
// ICE_LICENSE file included in this distribution.
//
// **********************************************************************
//
// Ice version 3.5.1
//
// <auto-generated>
//
// Generated from file `Cardroid.ice'
//
// Warning: do not edit this file.
//
// </auto-generated>
//

package uclm.esi.cardroid.data.zerocice;

public class _MessageTypTie extends MessageTyp implements Ice.TieBase
{
    public _MessageTypTie()
    {
    }

    public _MessageTypTie(_MessageTypOperations delegate)
    {
        _ice_delegate = delegate;
    }

    public java.lang.Object ice_delegate()
    {
        return _ice_delegate;
    }

    public void ice_delegate(java.lang.Object delegate)
    {
        _ice_delegate = (_MessageTypOperations)delegate;
    }

    public boolean equals(java.lang.Object rhs)
    {
        if(this == rhs)
        {
            return true;
        }
        if(!(rhs instanceof _MessageTypTie))
        {
            return false;
        }

        return _ice_delegate.equals(((_MessageTypTie)rhs)._ice_delegate);
    }

    public int hashCode()
    {
        return _ice_delegate.hashCode();
    }

    public String getMessageText(Ice.Current __current)
    {
        return _ice_delegate.getMessageText(__current);
    }

    public long getTimeStampInMillis(Ice.Current __current)
    {
        return _ice_delegate.getTimeStampInMillis(__current);
    }

    public UserTypPrx getUser1(Ice.Current __current)
    {
        return _ice_delegate.getUser1(__current);
    }

    public UserTypPrx getUser2(Ice.Current __current)
    {
        return _ice_delegate.getUser2(__current);
    }

    public void setMessageText(String msg, Ice.Current __current)
    {
        _ice_delegate.setMessageText(msg, __current);
    }

    public void setTimeStampInMillis(long timeStampMillis, Ice.Current __current)
    {
        _ice_delegate.setTimeStampInMillis(timeStampMillis, __current);
    }

    public void setUser1(UserTypPrx user1, Ice.Current __current)
    {
        _ice_delegate.setUser1(user1, __current);
    }

    public void setUser2(UserTypPrx user2, Ice.Current __current)
    {
        _ice_delegate.setUser2(user2, __current);
    }

    public String _toString(Ice.Current __current)
    {
        return _ice_delegate._toString(__current);
    }

    private _MessageTypOperations _ice_delegate;

    public static final long serialVersionUID = -1974378935L;
}
